generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Collection {
  id          String    @id @default(uuid())
  title       String
  description String
  image       String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  products    Product[]
}

model Product {
  id           String      @id @default(uuid())
  title        String
  description  String
  media        Json
  tags         Json
  sizes        Json
  colors       Json
  price        Float
  expense      Float
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  collectionId String
  orderItems   OrderItem[]
  collection   Collection  @relation(fields: [collectionId], references: [id])
}

model Customer {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
  user      User?    @relation("UserCustomer")
}

model Order {
  id          String      @id @default(uuid())
  customerId  String
  totalAmount Float
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  customer    Customer    @relation(fields: [customerId], references: [id])
  items       OrderItem[]
}

model OrderItem {
  id        String  @id @default(uuid())
  orderId   String
  productId String
  title     String
  color     String
  size      String
  quantity  Int
  price     Float
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model User {
  id         String    @id @default(uuid())
  name       String
  email      String    @unique
  password   String
  role       Role      @default(CUSTOMER)
  customerId String?   @unique
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  customer   Customer? @relation("UserCustomer", fields: [customerId], references: [id])
}

enum Role {
  ADMIN
  CUSTOMER
}
